plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	// Cloth Config
	maven {
		url "https://maven.shedaniel.me/"
	}

	// Trinkets, Cloth Config
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}

	// Trinkets
	maven {
		name = "Ladysnake Libs"
		url = 'https://maven.ladysnake.org/releases'
	}

	// Spell Power, Spell Engine, Better Combat
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}

	// Player Animator
	maven {
		name "KosmX's maven"
		url 'https://maven.kosmx.dev/'
	}

	// Mixin Extras
	maven {
		url 'https://jitpack.io'
	}

	// Owo
	maven {
		url 'https://maven.wispforest.io'
	}
}

loom {
	accessWidenerPath = file("src/main/resources/bamcore.accesswidener")
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Cloth Config
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Player Animation Lib
	//If you don't want to include the library in your jar, remove the include word
	//You can find the latest version in [](https://maven.kosmx.dev/dev/kosmx/player-anim/player-animation-lib-fabric/)
	modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim}")

	//You might want bendy-lib. playerAnimator will wrap it.
	//include runtimeOnly("io.github.kosmx.bendy-lib:bendy-lib-fabric:${project.bendylib_version}")

	// Better Combat
	modImplementation "maven.modrinth:better-combat:${project.better_combat}"

	// Combat Roll
//	modImplementation "maven.modrinth:combat-roll:${project.combat_roll_version}"

	// Spell Engine
	modImplementation("maven.modrinth:spell-engine:${project.spell_engine_version}")

	// Spell Power
	modImplementation("maven.modrinth:spell-power:${project.spell_power_version}")

	// Projectile Damage Attribute
//	modImplementation "maven.modrinth:projectile-damage-attribute:${project.projectile_damage_attribute_version}"

	// Trinkets
	modImplementation "dev.emi:trinkets:${project.trinkets_version}"

	// Mixin Extras
	api("com.github.LlamaLad7:MixinExtras:0.2.0-beta.4")
	annotationProcessor("com.github.LlamaLad7:MixinExtras:0.2.0-beta.4")

	include(implementation(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-fabric:0.1.1")))

	// Tiny Config
	implementation include("com.github.ZsoltMolnarrr:TinyConfig:${project.tiny_config_version}")

	// Owo Lib
	modImplementation "io.wispforest:owo-lib:${project.owo_version}"
	include "io.wispforest:owo-sentinel:${project.owo_version}"

	// include this if you don't want force your users to install owo
	// sentinel will warn them and give the option to download it automatically
	include "io.wispforest:owo-sentinel:${project.owo_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
